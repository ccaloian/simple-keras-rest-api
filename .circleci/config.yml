version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip && \
              pip install -r requirements.txt
      - run:
          name: Lint code and Dockerfile
          command: |
            pylint --disable=R,C,W1203,W1202 run_keras_server.py

  build:
    docker:
      - image: circleci/golang:1.15
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: 
          name: Build and push Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t ccaloian/image-recognition:$TAG .
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker push ccaloian/image-recognition:$TAG
            curl \
              -H "Content-Type: text/plain" \
              -H "token:tag_${CIRCLE_WORKFLOW_ID}" \
              --request PUT \
              --data "$TAG" https://api.memstash.io/values/tag

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: udacity-devops
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - run:
          name: Update deployment file with new image
          command: |
            TAG=$(curl -s \
                -H "Content-Type: text/plain" \
                -H "token:tag_${CIRCLE_WORKFLOW_ID}" \
                --request GET https://api.memstash.io/values/tag)
            kubectl set image \
              -f deployment/deployment.yml \
              image-recognition="ccaloian/image-recognition:${TAG}" \
              --local -o yaml > deployment/temp-deployment.yml
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment/temp-deployment.yml
          resource-name: deployment/image-recognition

workflows:
  default:
    jobs:
      - lint
      - build:
          requires: [lint]
      - create-deployment:
          requires: [build]
          filters:
            branches:
              only: 
                - master
                - /pre-prod(?:-.+)?$/
